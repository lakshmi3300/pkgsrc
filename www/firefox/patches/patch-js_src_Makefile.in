$NetBSD: patch-js_src_Makefile.in,v 1.2 2013/09/19 12:37:50 ryoon Exp $

--- js/src/Makefile.in.orig	2013-09-10 03:43:34.000000000 +0000
+++ js/src/Makefile.in
@@ -237,10 +237,14 @@ endif
 # ICU headers need to be available whether we build with the complete
 # Internationalization API or not - ICU stubs rely on them.
 
+ifdef MOZ_NATIVE_ICU
+LOCAL_INCLUDES += $(MOZ_ICU_CFLAGS)
+else
 LOCAL_INCLUDES += \
   -I$(topsrcdir)/../../intl/icu/source/common \
   -I$(topsrcdir)/../../intl/icu/source/i18n \
   $(NULL)
+endif
 
 ifdef ENABLE_INTL_API
 
@@ -256,6 +260,7 @@ ifeq ($(OS_ARCH),WINNT)
                      cp -p intl/icu/lib/s$(libname)$(ICU_LIB_SUFFIX).lib intl/icu/lib/$(libname).lib;)
 endif
 
+ifndef MOZ_NATIVE_ICU
 # - Build ICU as part of the "export" target, so things get built
 #   in the right order.
 # - ICU requires GNU make according to its readme.html. pymake can't be used
@@ -269,6 +274,7 @@ export::
 
 distclean clean::
 	$(call SUBMAKE,$@,intl/icu)
+endif
 
 endif
 
@@ -408,7 +414,11 @@ ifneq (,$(MOZ_ZLIB_LIBS)$(MOZ_GLUE_LDFLA
 DEFINES += -DUSE_ZLIB
 endif
 
-SHARED_LIBRARY_LIBS += $(ICU_LIBS)
+ifdef MOZ_NATIVE_ICU
+EXTRA_DSO_LDOPTS += $(MOZ_ICU_LIBS)
+else
+SHARED_LIBRARY_LIBS += $(MOZ_ICU_LIBS)
+endif
 
 # Prevent floating point errors caused by VC++ optimizations
 ifdef _MSC_VER
@@ -467,6 +477,13 @@ EXTRA_LIBS	+= -lposix4 -ldl -lnsl -lsock
 endif
 endif
 
+# clang 3.3 + -O2 makes jaeger crash in FixupArity
+ifdef CLANG_CXX
+ifndef MOZ_DEBUG
+Compiler.$(OBJ_SUFFIX): CXXFLAGS += -fno-inline-functions
+endif
+endif
+
 # An AIX Optimization bug causes PR_dtoa() & JS_dtoa to produce wrong result.
 # This suppresses optimization for this single compilation unit.
 ifeq ($(OS_ARCH),AIX)
