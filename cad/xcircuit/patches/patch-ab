$NetBSD: patch-ab,v 1.11 2013/06/11 13:31:58 ryoon Exp $

--- configure.orig	2012-08-15 11:45:19.000000000 +0000
+++ configure
@@ -3794,12 +3794,12 @@ static char *f (char * (*g) (char **, in
    proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
    array size at least.  It's necessary to write '\x00'==0 to get something
    that's true only with -std.  */
-int osf4_cc_array ['\x00' == 0 ? 1 : -1];
+int osf4_cc_array ['\x00' = 0 ? 1 : -1];
 
 /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
    inside strings and character constants.  */
 #define FOO(x) 'x'
-int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
+int xlc6_cc_array[FOO(a) = 'x' ? 1 : -1];
 
 int test (int i, double x);
 struct s1 {int (*f) (int a);};
@@ -6006,7 +6006,7 @@ if test "${enable_double_buffer+set}" = 
   enableval=$enable_double_buffer;
 else
 
-  if test "x$xc_with_GL" == "x" ; then
+  if test "x$xc_with_GL" = "x" ; then
     $as_echo "#define DOUBLEBUFFER 1" >>confdefs.h
 
   else
@@ -6223,7 +6223,7 @@ xc_with_tk_libraries=""
 if test "${with_tcl+set}" = set; then :
   withval=$with_tcl;
   xc_with_tcl=$withval
-  if test "$withval" == "no" -o "$withval" == "NO"; then
+  if test "$withval" = "no" -o "$withval" = "NO"; then
       xc_with_tcl=""
   fi
 
@@ -6625,12 +6625,12 @@ if test "x$xc_with_tcl" != "x" ; then
   if test "x${xc_with_tcl_includes}" != "x" ; then
     if test -r "${xc_with_tcl_includes}/tcl.h" ; then
       TCL_INC_DIR=${xc_with_tcl_includes}
-    elif test "x${TCL_INCLUDE_SPEC}" == "x" ; then
+    elif test "x${TCL_INCLUDE_SPEC}" = "x" ; then
       echo "Can't find tcl.h in \"${xc_with_tcl_includes}\""
       echo "Reverting to non-Tcl compilation"
       xc_with_tcl=""
     fi
-  elif test "x${TCL_INCLUDE_SPEC}" == "x" ; then
+  elif test "x${TCL_INCLUDE_SPEC}" = "x" ; then
     for dir in \
      ${TCL_PREFIX}/include/tcl${TCL_MAJOR_VERSION}.${TCL_MINOR_VERSION} \
      ${TCL_PREFIX}/include \
